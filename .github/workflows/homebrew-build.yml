# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Homebrew 

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Timely version"
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache pkg modules
        id: cache-pkg
        uses: actions/cache@v3
        env:
          cache-name: cache-pkg
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.pkg-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install QEMU and ldid
        run: |
          # Install qemu
          sudo apt install qemu binfmt-support qemu-user-static
          # install ldid
          git clone https://github.com/daeken/ldid.git
          cd ./ldid
          ./make.sh
          sudo cp ./ldid /usr/local/bin
  



      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name : Install dependencies and build executables
        run: |
          npm i

          # Copy sqlite binaries
          rsync -rvzhP ./binaries/binding/ ./node_modules/sqlite3/lib/binding/


          # clean up code to optimize
          npx modclean --patterns="default:*" --ignore="nc-lib-gui/**,dayjs/**,express-status-monitor/**,sqlite3/**" --run


          # build executables
          npm run build



          # sudo chmod 777 dist/help-macos-arm64
          # ldid -S dist/help-macos-arm64

          ls
          ls ./dist
          
          
          
          mkdir ./mac-dist
          mv ./dist/Noco-arm64 ./mac-dist/
          mv ./dist/Noco-x64 ./mac-dist/
          
      - name: Upload executables to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.NC_GITHUB_TOKEN }}
          file: dist/**
          tag: ${{ github.event.inputs.tag || inputs.tag }}
          overwrite: true
          file_glob: true
          
          
          
          
      - uses: actions/upload-artifact@master
        with:
            name: executables
            path: mac-dist
          
  sign:
    runs-on: macos-latest
    needs: build
    steps:

        - uses: actions/download-artifact@master
          with:
            name: executables
            path: mac-dist

        - run: |
            /usr/bin/codesign --force -s - ./mac-dist/Noco-arm64 -v
            /usr/bin/codesign --force -s - ./mac-dist/Noco-x64 -v
        - uses: actions/upload-artifact@master
          with:
            name: executables
            path: mac-dist


  publish:
    needs: sign
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: executables
          path: mac-dist
      - name: Compress files
        run: |
          mv ./mac-dist/Noco-x64 ./mac-dist/noco
          tar -czf ./mac-dist/noco.tar.gz ./mac-dist/noco
          echo "::set-output name=CHECKSUM::$(shasum -a 256 ./mac-dist/noco.tar.gz | awk '{print $1}')"
        id: compress

      - name: print 
        run: |
          FORMULA_CLASS_STR=$(cat << EOF
          class Getfilesize < Formula
            desc "Get Human Readable file size information. - CLI"
            homepage "https://github.com/bharathvaj-ganesan/getfilesize-cli"
            url "https://github.com/pranavxc/nc-test-repo/releases/download/${{ github.event.inputs.tag || inputs.tag }}/noco.tar.gz"
            sha256 "${{ steps.compress.outputs.CHECKSUM }}"
            license "MIT"
            version "1.0.1"

            def install
              bin.install "noco"
            end
          end
          EOF
          )
          printf "$FORMULA_CLASS_STR" >> Formula/noco.rb
          echo "${{ steps.compress.outputs.CHECKSUM }}"
          
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          
          git commit Formula/noco.rb -m "Update formula"
          git tag ${{ github.event.inputs.tag || inputs.tag }}
          git push --tags
          
          
          git clone https://.:${{ secrets.NC_GITHUB_TOKEN }}@github.com/nocodb/homebrew-nocodb
          \cp -f ./Formula/noco.rb ./homebrew-nocodb/Formula/noco.rb
          cd homebrew-nocodb
          git add .
          git diff-index --quiet HEAD || git commit -m "Automatic publish"
          git push target master
          
      - name: Upload mac executables to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.NC_GITHUB_TOKEN }}
          file: mac-dist/**
          tag: ${{ github.event.inputs.tag || inputs.tag }}
          overwrite: true
          file_glob: true
          
