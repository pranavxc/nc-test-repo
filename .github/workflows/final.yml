# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Biuld, Sign & Publish

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Target Tag"
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache pkg modules
        id: cache-pkg
        uses: actions/cache@v3
        env:
          cache-name: cache-pkg
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.pkg-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install QEMU and ldid
        run: |
          # Install qemu
          sudo apt install qemu binfmt-support qemu-user-static

          # install ldid
          git clone https://github.com/daeken/ldid.git
          cd ./ldid
          ./make.sh
          sudo cp ./ldid /usr/local/bin

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name : Install dependencies and build executables
        run: |
          npm i

          # npm i --target_arch=x64 --target_platform=darwin
          # npx node-pre-gyp install --directory=./node_modules/sqlite3 --target_platform=win32 --target_arch=ia32
          # npx node-pre-gyp install --directory=./node_modules/sqlite3 --target_platform=darwin --target_arch=x64
          # npx node-pre-gyp install --directory=./node_modules/sqlite3 --target_platform=darwin --target_arch=arm
          # npx node-pre-gyp install --directory=./node_modules/sqlite3 --target_platform=linux --target_arch=x64
          # npx node-pre-gyp install --directory=./node_modules/sqlite3 --target_platform=linux --target_arch=arm

          # Copy sqlite binaries
          rsync -rvzhP ./binaries/binding/ ./node_modules/sqlite3/lib/binding/

          # clean up code to optimize
          npx modclean --patterns="default:*" --ignore="nc-lib-gui/**,dayjs/**,express-status-monitor/**,sqlite3/**" --run

          # build executables
          npm run build
      - uses: actions/upload-artifact@master
        with:
          name: executables
          path: dist

  sign:
    runs-on: macos-latest
    needs: build
    steps:

        - uses: actions/download-artifact@master
          with:
            name: executables
            path: dist

        - run: |
            ls
            ls dist
            /usr/bin/codesign --force -s - ./dist/Noco-macos-arm64 -v
            /usr/bin/codesign --force -s - ./dist/Noco-macos-x64 -v


        - uses: actions/upload-artifact@master
          with:
            name: executables
            path: dist


  publish:
    needs: sign
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: executables
          path: dist

      - name: Create tag
        uses: actions/github-script@v3
        with:
          # need workflows permission but it's not in GITHUB_TOKEN scope
          # need a custom PAT with workflows permission here
          github-token: ${{ secrets.NC_GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: 'nocodb/nocodb-timely',
              ref: "refs/tags/${{ github.event.inputs.tag || inputs.tag }}",
              sha: "${{github.sha}}"
            })


      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.NC_GITHUB_TOKEN }}
          file: dist/**
          tag: ${{ github.event.inputs.tag || inputs.tag }}
          overwrite: true
          file_glob: true
          repo_name: nocodb/nocodb-timely

